{"version":3,"sources":["components/MugModel.jsx","components/CadreBois.jsx","components/BaguetteSimple.jsx","components/MoveBaguettePoints.jsx","inteface/BaguetteLengthInput.jsx","components/Baguette.jsx","components/ModelPP.jsx","components/ModelDos.jsx","components/ModelArt.jsx","components/Cadre.jsx","App.js","index.js"],"names":["useGLTF","preload","MugModel","props","group","useRef","nodes","materials","gl","useThree","ctx","texture","canvas","Array","from","document","getElementsByTagName","getContext","THREE","flipY","anisotropy","capabilities","getMaxAnisotropy","needsUpdate","console","log","animationSpeed","useFrame","state","delta","animation","reverse","current","rotation","y","_jsxs","scale","position","ref","dispose","children","_jsx","castShadow","receiveShadow","geometry","Exterior","material","Cylinder003_1","Impression","attach","map","image","Interior","CadreBois","Cube001","Material","Math","PI","Cube002","Cube003","Cube005","BaguetteLengthInput","_ref","label","initialValue","onLengthChange","maxValue","minValue","length","setLength","useState","useEffect","htmlFor","concat","type","id","value","onChange","event","parseFloat","target","min","max","step","Baguette","clone","Size","boundingBox","size","woodTexture","TextureLoader","load","vertices","attributes","array","i","LongueurBaguette","x","indicesToAdjust","angleInRadians","degToRad","widthAdjustment","BaguetteWidth","index","baseIndex","z","newX","cos","newZ","sin","indicesToAdjust2","BaguetteHWidth","heightAdjustment","BaguetteHeight","largeurFeuillure","RabateWidth","hauteurFeuillure","RabateHeight","ModelPP","PPColor","newColor","Color","color","Cube_1","Cube_2","Ame","Model","colorPP","Dos","ModelArt","IMPRESSION","getSize","nodes2","materials2","newGeometry","newMaterial","_Fragment","Cadre","visibleArt","visibleDos","visiblePP","frameColor","DosColor","CadreExtWidth","CadreExtHeight","BaguetteSeule","ModelDos","App","editor","onReady","useFabricJSEditor","FillColor","setFillColor","StrokeColor","setStrokeColor","BackColor","setBackColor","Stroke","setStroke","visibleMug","setvisibleMug","visibleCadre","setvisibleCadre","visibleCadreBois","setvisibleCadreBois","Animation","setAnimation","Reverse","setReverse","jsonContent","setJsonContent","AnimationSpeed","setAnimationSpeed","rangeValue","setRangeValue","largeurCadre","setLargeurCadre","hauteurCadre","setHauteurCadre","setLargeurFeuillure","setHauteurFeuillure","largeurBaguette","setLargeurBaguette","hauteurBaguette","setHauteurBaguette","baguetteSeule","SetBaguetteSeule","setFrameColor","setDosColor","setPPColor","setvisiblePP","setvisibleDos","setvisibleArt","largeurArt","setLargeurArt","hauteurArt","setHauteurArt","history","jsonDiv","backgroundColor","setDimensions","width","height","formattedJson","JSON","stringify","fabric","getActiveObject","strokeWidth","parseInt","freeDrawingBrush","onSelectAll","discardActiveObject","sel","ActiveSelection","getObjects","setActiveObject","requestRenderAll","className","Canvas","frameloop","shadows","dpr","camera","fov","args","intensity","Suspense","fallback","CadreModel","OrbitControls","disabled","e","onClick","onTogglePP","onToggleBaguette","onAddCircle","isDrawingMode","addCircle","onAddEllipse","ellipse","Ellipse","left","top","rx","ry","fill","stroke","strokeUniform","add","onAddRectangle","rect","Rect","onAddText","addText","onToggleDraw","accept","file","files","reader","FileReader","onload","imageUrl","result","Image","fromURL","scaleToHeight","scaleToWidth","readAsDataURL","svgString","loadSVGFromString","objects","options","svgGroup","Group","readAsText","rayon","clipPath","Circle","radius","originY","originX","renderAll","FabricJSCanvas","onSelect","setSelectedObject","onDelete","remove","onClear","_objects","splice","onUndo","push","pop","onRedo","groupObjects","toGroup","unGroupObjects","toActiveSelection","name","for","onToggleMug","onToggleCadre","checked","valueAsNumber","async","dataURL","toDataURL","format","link","createElement","download","href","body","appendChild","click","removeChild","exportToSvg","toSVG","blob","Blob","URL","createObjectURL","revokeObjectURL","style","whiteSpace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.747b5671.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from 'three'\n\n// MODELISATION DU MUB IMPORT BLENDER\n\nfunction MugModel(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/MugModel.gltf')\n  const { gl } = useThree()\n\n  /* CANVAS POUR DESSINER TEXTURE*/\n\n  let canvas = Array.from(document.getElementsByTagName('canvas'))[1],\n    ctx,\n    texture\n  ctx = canvas.getContext('2d')\n\n  // CREATION TEXTURE //\n\n  texture = new THREE.CanvasTexture(ctx.canvas)\n  texture.flipY = false // Vous pouvez essayer true si nécessaire.\n  texture.anisotropy = gl.capabilities.getMaxAnisotropy()\n  texture.needsUpdate = true\n\n  /* ANIMATION */\n\n  console.log(props.animationSpeed)\n\n  useFrame((state, delta) => {\n    if (props.animation) {\n      if (!props.reverse) {\n        group.current.rotation.y += props.animationSpeed * 0.001 // Vitesse de rotation\n      } else {\n        group.current.rotation.y -= props.animationSpeed * 0.001 // Vitesse de rotation\n      }\n    }\n    texture.needsUpdate = true\n  })\n\n  return (\n    // DESCRIPTION DU MODELE\n\n    <group scale={10} rotation={[0, 1.812, 0]} position={[0, -0.5, 0]} ref={group} {...props} dispose={null}>\n      //ANSE //\n      <group rotation={[0, -0.412, 0]}>\n        <mesh castShadow receiveShadow geometry={nodes.Exterior.geometry} material={materials['white-material']} />\n        <mesh castShadow receiveShadow geometry={nodes.Cylinder003_1.geometry} material={materials['color-material']} />\n      </group>\n      // EXTERIEUR\n      <mesh castShadow receiveShadow geometry={nodes.Exterior.geometry} material={materials['white-material']} rotation={[0, -0.412, 0]} />\n      // ZONE D'IMPRESSION DU MODEL\n      <mesh\n        rotation={[0, -0.412, 0]}\n        castShadow\n        receiveShadow\n        geometry={nodes.Impression.geometry}\n        material={materials['map-material']}\n        flipY={true}\n      >\n        <meshStandardMaterial attach=\"material\" map={texture}>\n          <canvasTexture attach=\"map\" image={canvas} />\n        </meshStandardMaterial>\n      </mesh>\n      // INTERIEUR\n      <mesh castShadow receiveShadow geometry={nodes.Interior.geometry} material={materials['color-material']} rotation={[0, -0.412, 0]} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/MugModel.gltf')\n\nexport default MugModel\n","import React, { useRef, Suspense, useEffect } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { ContactShadows, Environment, OrbitControls, useGLTF } from '@react-three/drei'\nimport { FabricJSCanvas, useFabricJSEditor } from 'fabricjs-react'\nimport { fabric } from 'fabric'\nimport * as THREE from 'three'\n\nexport function CadreBois(props) {\n  const { nodes, materials } = useGLTF('/baguette.gltf')\n  return (\n    <group {...props} dispose={null}>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube001.geometry}\n        material={materials.Material}\n        position={[-0.008, -15, 0]}\n        rotation={[Math.PI, 0, Math.PI]}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube002.geometry}\n        material={materials.Material}\n        position={[-0.008, 15, 0]}\n        rotation={[Math.PI, 0, 0]}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube003.geometry}\n        material={materials.Material}\n        position={[-11, 0, 0]}\n        rotation={[Math.PI, 0, -1.571]}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube005.geometry}\n        material={materials.Material}\n        position={[11, 0, 0]}\n        rotation={[Math.PI, 0, 1.571]}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload('/baguette.gltf')\n\nexport default CadreBois\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nfunction BaguetteSimple(props) {\n  const { nodes, materials } = useGLTF('/BaguetteSimple.gltf')\n  return (\n    <group {...props} dispose={null}>\n      <mesh castShadow receiveShadow geometry={nodes.Baguette.geometry} material={materials.Material} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/BaguetteSimple.gltf')\n\nexport default BaguetteSimple\n","// MoveBaguettePoints.js\nimport React, { useRef, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { PointsMaterial } from '@react-three/fiber'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\n\nexport default function MoveBaguettePoints(props) {\n  const { nodes, materials } = useGLTF('/BaguetteTextureMelange.gltf')\n\n  console.log(nodes.Baguette)\n\n  const pmaterial = new THREE.PointsMaterial({ color: 0xff0000 })\n  pmaterial.size = 0.5\n\n  // Clone the original geometry to prevent modifications to the original\n  const geometry = nodes.Baguette.geometry.clone()\n  const geometry2 = nodes.Baguette.geometry.clone()\n\n  // Compute the scale\n  console.log(geometry)\n  console.log(geometry.boundingBox.size())\n  const Size = geometry.boundingBox.size()\n  console.log(Size.x, Size.y, Size.z)\n\n  const textureLoader = new TextureLoader()\n  const woodTexture = textureLoader.load('/wood_texture.jpg')\n\n  // Assign the texture to the material\n  const woodmaterial = new THREE.MeshPhongMaterial({ map: woodTexture })\n\n  // Créer un groupe\n  const group = new THREE.Group()\n  group.position.set(0, 0, 0) // Définir l'origine du groupe\n\n  // Ajouter le modèle au groupe\n  group.add(nodes.Baguette)\n\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust position for specific points\n    const indicesToAdjust = [9, 7, 11]\n    const angle = 45 // Angle en degrés\n    const angleInRadians = THREE.MathUtils.degToRad(angle)\n    const widthAdjustment = props.widthAdjustment\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n      const newX = x - Math.cos(angleInRadians) * widthAdjustment\n      const newZ = z - Math.sin(angleInRadians) * widthAdjustment\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n    // Adjust position for specific points\n    const indicesToAdjust2 = [0, 4, 2]\n\n    for (const index of indicesToAdjust2) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n\n      const newZ = z - Math.sin(angleInRadians) * widthAdjustment\n      const newX = x + Math.cos(angleInRadians) * widthAdjustment\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.widthAdjustment, geometry.attributes.position])\n\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust position for specific points\n    const indicesToAdjust = [3, 6]\n    const angle = 45 // Angle en degrés\n    const angleInRadians = THREE.MathUtils.degToRad(angle)\n    const largeurFeuillure = props.largeurFeuillure\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n      const newX = x + Math.cos(angleInRadians) * largeurFeuillure\n      const newZ = z - Math.sin(angleInRadians) * largeurFeuillure\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n    // Adjust position for specific points\n    const indicesToAdjust2 = [10, 13]\n\n    for (const index of indicesToAdjust2) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n      const newX = x - Math.cos(angleInRadians) * largeurFeuillure\n      const newZ = z - Math.sin(angleInRadians) * largeurFeuillure\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.largeurFeuillure, geometry.attributes.position])\n\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust height for specific points\n    const indicesToAdjust = [4, 5, 6, 11, 12, 13]\n    const hauteurFeuillure = props.hauteurFeuillure\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      vertices[baseIndex + 1] = vertices[baseIndex + 1] - hauteurFeuillure // Update Y coordinate\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.hauteurFeuillure, geometry.attributes.position])\n\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust height for specific points\n    const indicesToAdjust = [0, 3, 10, 7]\n    const heightAdjustment = props.heightAdjustment\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      vertices[baseIndex + 1] = vertices[baseIndex + 1] - heightAdjustment // Update Y coordinate\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.heightAdjustment, geometry.attributes.position])\n\n  useEffect(() => {\n    // Access the vertices and move them based on the input range\n    const vertices = geometry.attributes.position.array\n    console.log('Range: ', props.rangeValue)\n    console.log('Vertices: ', vertices[0], '/', vertices[1], '/', vertices[2])\n\n    for (let i = 0; i < vertices.length / 2; i += 3) {\n      vertices[i] = vertices[i] + props.rangeValue - Size.x // Update X coordinate\n      \n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.rangeValue, geometry.attributes.position])\n\n  materials['Material.001'].color.set('rgba(100, 100, 0, 0.7)')\n\n  return (\n    <group {...props} dispose={null}>\n      <group>\n        <mesh castShadow receiveShadow geometry={geometry} material={materials['Material.001']} />\n        <mesh\n          scale={[1, 1, 1]}\n          rotation={[0, (3 * Math.PI) / 2, 0]}\n          position={[props.rangeValue - 10 - 2, 0, 10]}\n          color={0x00ff00}\n          castShadow\n          receiveShadow\n          geometry={geometry}\n          material={materials['Material.001']}\n        />\n      </group>\n      <group rotation={[0, Math.PI, 0]} position={[props.rangeValue - Size.x, 0, props.rangeValue - 2]}>\n        <mesh castShadow receiveShadow geometry={geometry} material={materials['Material.001']} />\n        <mesh\n          scale={[1, 1, 1]}\n          rotation={[0, (3 * Math.PI) / 2, 0]}\n          position={[props.rangeValue - 10 - 2, 0, 10]}\n          color={0x00ff00}\n          castShadow\n          receiveShadow\n          geometry={geometry}\n          material={materials['Material.001']}\n        />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/baguetteTextureMelange.gltf')\n","import React, { useState, useEffect } from 'react'\n\nconst BaguetteLengthInput = ({ label, initialValue, onLengthChange, maxValue, minValue }) => {\n  const [length, setLength] = useState(initialValue)\n\n  const handleChange = (event) => {\n    const value = parseFloat(event.target.value)\n    setLength(value)\n    onLengthChange(value)\n  }\n\n  useEffect(() => {\n    onLengthChange(initialValue)\n  }, [])\n\n  return (\n    <div>\n      <label htmlFor={`baguette${label}Input`}>{` ${label}:`}</label>\n      <input type=\"number\" id={`baguette${label}Input`} value={length} onChange={handleChange} min={minValue} max={maxValue} step=\"0.5\" />\n      <span> cm</span>\n    </div>\n  )\n}\n\nexport default BaguetteLengthInput\n","// MoveBaguettePoints.js\nimport React, { useRef, useEffect } from 'react'\nimport { useGLTF, useLoader, useTexture } from '@react-three/drei'\nimport { PointsMaterial } from '@react-three/fiber'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\n\nexport default function Baguette(props) {\n  const { nodes, materials } = useGLTF('/BaguetteBois3.gltf')\n\n  // Clone the original geometry to prevent modifications to the original\n  const geometry = nodes.Baguette.geometry.clone()\n\n  // Compute the scale\n  //console.log(geometry)\n  //console.log(geometry.boundingBox.size())\n  const Size = geometry.boundingBox.size()\n  // console.log(Size.x, Size.y, Size.z)\n\n  const textureLoader = new TextureLoader()\n  const woodTexture = textureLoader.load('/wood_texture.jpg')\n  // Array to store objects containing index and Vector3 position\n\n  // Assign the texture to the material\n  const woodmaterial = new THREE.MeshStandardMaterial({ map: woodTexture })\n\n  // LONGUEUR BAGUETTE\n  useEffect(() => {\n    // Access the vertices and move them based on the input range\n    const vertices = geometry.attributes.position.array\n\n    for (let i = 0; i < vertices.length / 2; i += 3) {\n      vertices[i] = vertices[i] + (props.LongueurBaguette - Size.x) / 2 // Update X coordinate\n    }\n    for (let i = vertices.length / 2; i < vertices.length; i += 3) {\n      vertices[i] = vertices[i] - (props.LongueurBaguette - Size.x) / 2 // Update X coordinate\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.LongueurBaguette, geometry.attributes.position])\n\n  // LARGEUR BAGUETTE\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    console.log(geometry.attributes)\n\n    // Adjust position for specific points\n    const indicesToAdjust = [23, 24, 25, 26, 36, 37, 38, 30, 31, 32]\n    const angle = 45 // Angle en degrés\n    const angleInRadians = THREE.MathUtils.degToRad(angle)\n    const widthAdjustment = props.BaguetteWidth - 2\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n      const newX = x - Math.cos(angleInRadians) * widthAdjustment\n      const newZ = z - Math.sin(angleInRadians) * widthAdjustment\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n\n      console.log(index, newX, newZ)\n    }\n    // Adjust position for specific points\n    const indicesToAdjust2 = [0, 1, 2, 13, 14, 15, 16, 6, 7, 8]\n\n    for (const index of indicesToAdjust2) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n\n      const newZ = z - Math.sin(angleInRadians) * widthAdjustment\n      const newX = x + Math.cos(angleInRadians) * widthAdjustment\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.BaguetteHWidth, geometry.attributes.position])\n\n  // HAUTEUR BAGUETTE\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust height for specific points\n    const indicesToAdjust = [3, 4, 5, 6, 7, 8, 27, 28, 29, 30, 31, 32]\n    const heightAdjustment = props.BaguetteHeight - 2\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n\n      vertices[baseIndex + 1] = vertices[baseIndex + 1] + heightAdjustment\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.BaguetteHeight, geometry.attributes.position])\n\n  // LARGEUR FEUILLURE\n\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust position for specific points\n    const indicesToAdjust = [9, 10, 11, 12, 20, 21, 22]\n\n    const angle = 45 // Angle en degrés\n    const angleInRadians = THREE.MathUtils.degToRad(angle)\n    const largeurFeuillure = props.RabateWidth - 1\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n      const newX = x + Math.cos(angleInRadians) * largeurFeuillure\n      const newZ = z - Math.sin(angleInRadians) * largeurFeuillure\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n    // Adjust position for specific points 3 6 / 10 13\n    const indicesToAdjust2 = [33, 34, 35, 42, 43, 44, 45]\n\n    for (const index of indicesToAdjust2) {\n      const baseIndex = index * 3\n      const x = vertices[baseIndex]\n      const y = vertices[baseIndex + 1]\n      const z = vertices[baseIndex + 2]\n\n      // Déplacement en fonction de l'angle et de l'épaisseur de la feuillure\n      const newX = x - Math.cos(angleInRadians) * largeurFeuillure\n      const newZ = z - Math.sin(angleInRadians) * largeurFeuillure\n\n      vertices[baseIndex] = newX\n      vertices[baseIndex + 2] = newZ\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.RabateWidth, geometry.attributes.position])\n\n  // HAUTEUR FEUILLURE\n\n  useEffect(() => {\n    const vertices = geometry.attributes.position.array\n\n    // Adjust height for specific points\n    const indicesToAdjust = [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 37, 38, 42, 43, 44, 45, 39, 40, 41]\n    const hauteurFeuillure = props.RabateHeight - 1.5\n\n    for (const index of indicesToAdjust) {\n      const baseIndex = index * 3\n      vertices[baseIndex + 1] = vertices[baseIndex + 1] + hauteurFeuillure // Update Y coordinate\n    }\n\n    // Notify three.js that the geometry has been updated\n    geometry.attributes.position.needsUpdate = true\n  }, [props.RabateHeight, geometry.attributes.position])\n\n  return (\n    <group {...props} dispose={null}>\n      <mesh castShadow receiveShadow geometry={geometry}>\n        <meshStandardMaterial map={woodTexture} />\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload('/baguetteBois3.gltf')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { Color } from 'three'\n\n// ...\n\nexport default function ModelPP(props) {\n  const { nodes, materials } = useGLTF('/ModelPP.gltf')\n\n  console.log(props.PPColor)\n  // Créez un objet Color avec la couleur souhaitée (rouge dans cet exemple)\n  const newColor = new Color(props.PPColor)\n\n  // Affectez la nouvelle couleur au matériau\n  materials['Handmade Paper 01'].color = newColor\n\n  return (\n    <group {...props} dispose={null}>\n      <group scale={[1, 0.5, 1]} position={[0, -2, 0]}>\n        <mesh castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={materials['Handmade Paper 01']} />\n        <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={materials.Ame} />\n      </group>\n    </group>\n  )\n}\n\n// ...\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { Color } from 'three'\n\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF('/ModelDos.gltf')\n  // Créez un objet Color avec la couleur souhaitée (rouge dans cet exemple)\n  const newColor = new Color(props.colorPP)\n  //materials['Paper old'].color.set(props.DosColor)\n  materials['Paper old'].color = newColor\n  return (\n    <group {...props} dispose={null}>\n      <mesh castShadow receiveShadow geometry={nodes.Dos.geometry} material={materials['Paper old']} position={[0, -2.1, 0]} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/ModelDos.gltf')\n","import React, { useRef, Suspense, useEffect } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { ContactShadows, Environment, OrbitControls, useGLTF } from '@react-three/drei'\nimport { FabricJSCanvas, useFabricJSEditor } from 'fabricjs-react'\nimport { fabric } from 'fabric'\nimport * as THREE from 'three'\n\nfunction ModelArt(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/ModelArt2.gltf')\n  const { gl } = useThree()\n  const Size = new THREE.Vector3()\n\n  nodes.IMPRESSION.geometry.boundingBox.getSize(Size)\n\n  // Changer la taille du modèle\n\n  const { nodes: nodes2, materials: materials2 } = useGLTF('/ModelArt3.gltf') // Modification ici\n\n  const newGeometry = nodes2.IMPRESSION.children[0].geometry\n  const newMaterial = materials2['Map-Material']\n\n  let canvas = Array.from(document.getElementsByTagName('canvas'))[1],\n    ctx,\n    texture\n  ctx = canvas.getContext('2d')\n  texture = new THREE.CanvasTexture(ctx.canvas)\n  texture.flipY = false // Vous pouvez essayer true si nécessaire.\n\n  texture.anisotropy = gl.capabilities.getMaxAnisotropy()\n  texture.needsUpdate = true\n  /* ANIMATION */\n\n  useFrame((state, delta) => {\n    if (props.animation) {\n      group.current.rotation.z += 0.01 * 3 // Vitesse de rotation\n    }\n    texture.needsUpdate = true\n  })\n\n  return (\n    // DESCRIPTION DU MODELE\n    <>\n      <group {...props} position={[0, -2.1, 0]} rotation={[0, Math.PI / 2, 0]} dispose={null}>\n        <mesh castShadow receiveShadow geometry={newGeometry} material={newMaterial} scale={0.02}>\n          <meshStandardMaterial attach=\"material\" map={texture}>\n            <canvasTexture attach=\"map\" image={canvas} />\n          </meshStandardMaterial>\n        </mesh>\n      </group>\n    </>\n  )\n}\n\nuseGLTF.preload('/ModelArt2.gltf')\n\nexport default ModelArt\n","import React from 'react'\nimport Baguette from './Baguette'\nimport ModelPP from './ModelPP'\nimport ModelDos from './ModelDos'\nimport ModelArt from './ModelArt'\n\nconst Cadre = ({\n  position,\n  visibleArt,\n  visibleDos,\n  visiblePP,\n  frameColor,\n  DosColor,\n  PPColor,\n  CadreExtWidth,\n  CadreExtHeight,\n  BaguetteWidth,\n  BaguetteHeight,\n  RabateHeight,\n  RabateWidth,\n  BaguetteSeule,\n}) => {\n  return (\n    <group>\n      {visiblePP ? <ModelPP PPColor={PPColor} /> : null}\n      {visibleDos ? <ModelDos DosColor={DosColor} /> : null}\n      {visibleArt ? <ModelArt /> : null}\n\n      {BaguetteSeule ? (\n        <Baguette\n          position={[0, position[1], -CadreExtHeight / 2 + 1]}\n          frameColor={frameColor}\n          RabateHeight={RabateHeight}\n          RabateWidth={RabateWidth}\n          BaguetteWidth={BaguetteWidth}\n          BaguetteHeight={BaguetteHeight}\n          LongueurBaguette={CadreExtWidth}\n        />\n      ) : (\n        <>\n          {/* Vos groupes existants pour les quatre baguettes */}\n          <group>\n            <Baguette\n              position={[0, position[1], -CadreExtHeight / 2 + 1.5]}\n              frameColor={frameColor}\n              RabateHeight={RabateHeight}\n              RabateWidth={RabateWidth}\n              BaguetteWidth={BaguetteWidth}\n              BaguetteHeight={BaguetteHeight}\n              LongueurBaguette={CadreExtWidth}\n            />\n            <Baguette\n              position={[CadreExtWidth / 2 - 1.5, position[1], 0]}\n              rotation={[0, (3 * Math.PI) / 2, 0]}\n              frameColor={frameColor}\n              RabateHeight={RabateHeight}\n              RabateWidth={RabateWidth}\n              BaguetteWidth={BaguetteWidth}\n              BaguetteHeight={BaguetteHeight}\n              LongueurBaguette={CadreExtHeight}\n            />\n          </group>\n          <group rotation={[0, Math.PI, 0]}>\n            <Baguette\n              position={[0, position[1], -CadreExtHeight / 2 + 1.5]}\n              frameColor={frameColor}\n              RabateHeight={RabateHeight}\n              RabateWidth={RabateWidth}\n              BaguetteWidth={BaguetteWidth}\n              BaguetteHeight={BaguetteHeight}\n              LongueurBaguette={CadreExtWidth}\n            />\n            <Baguette\n              position={[CadreExtWidth / 2 - 1.5, position[1], 0]}\n              rotation={[0, (3 * Math.PI) / 2, 0]}\n              frameColor={frameColor}\n              RabateHeight={RabateHeight}\n              RabateWidth={RabateWidth}\n              BaguetteWidth={BaguetteWidth}\n              BaguetteHeight={BaguetteHeight}\n              LongueurBaguette={CadreExtHeight}\n            />\n          </group>\n        </>\n      )}\n    </group>\n  )\n}\n\nexport default Cadre\n","import React, { useRef, Suspense, useEffect, useState } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { ContactShadows, Environment, OrbitControls, useGLTF, useTexture } from '@react-three/drei'\nimport { FabricJSCanvas, useFabricJSEditor } from 'fabricjs-react'\nimport { fabric } from 'fabric'\nimport * as THREE from 'three'\n\nimport MugModel from './components/MugModel'\nimport CadreBois from './components/CadreBois'\nimport CustomShape from './components/CustomShape'\nimport ModelWrapper from './components/ModelWrapper'\nimport BaguetteSimple from './components/BaguetteSimple'\nimport MoveBaguettePoints from './components/MoveBaguettePoints'\nimport BaguetteLengthInput from './inteface/BaguetteLengthInput'\nimport Baguette from './components/Baguette'\nimport Cadre from './components/Cadre'\n\nexport default function App() {\n  const { editor, onReady } = useFabricJSEditor()\n  const [FillColor, setFillColor] = useState('#FF0000')\n  const [StrokeColor, setStrokeColor] = useState('#000000')\n  const [BackColor, setBackColor] = useState('#FFFFFF')\n  const [Stroke, setStroke] = useState(2)\n  const [visibleMug, setvisibleMug] = useState(false)\n  const [visibleCadre, setvisibleCadre] = useState(false)\n  const [visibleCadreBois, setvisibleCadreBois] = useState(false)\n  const [Animation, setAnimation] = useState(true)\n  const [Reverse, setReverse] = useState(false)\n  const [jsonContent, setJsonContent] = useState('')\n  const [AnimationSpeed, setAnimationSpeed] = useState(10)\n  const [rangeValue, setRangeValue] = useState(0)\n  const [largeurCadre, setLargeurCadre] = useState(22.3)\n  const [hauteurCadre, setHauteurCadre] = useState(22.3)\n  const [largeurFeuillure, setLargeurFeuillure] = useState(1)\n  const [hauteurFeuillure, setHauteurFeuillure] = useState(1.5)\n  const [largeurBaguette, setLargeurBaguette] = useState(2)\n  const [hauteurBaguette, setHauteurBaguette] = useState(2)\n  const [baguetteSeule, SetBaguetteSeule] = useState(false)\n  const [frameColor, setFrameColor] = useState('#EECC00')\n  const [DosColor, setDosColor] = useState('#D2B37F')\n  const [PPColor, setPPColor] = useState('#222222')\n  const [visiblePP, setvisiblePP] = useState(true)\n  const [visibleDos, setvisibleDos] = useState(true)\n  const [visibleArt, setvisibleArt] = useState(true)\n\n  const [largeurArt, setLargeurArt] = useState(10)\n  const [hauteurArt, setHauteurArt] = useState(10)\n\n  const handleArtHeightChange = (ArtHeight) => {\n    setHauteurArt(ArtHeight)\n  }\n\n  const handleArtWidthChange = (ArtWidth) => {\n    setLargeurArt(ArtWidth)\n  }\n\n  const handleFrameWidthChange = (frameWidth) => {\n    setLargeurCadre(frameWidth)\n  }\n  const handleFrameHeightChange = (frameHeight) => {\n    setHauteurCadre(frameHeight)\n  }\n\n  const handleBaguetteWidthChange = (baguetteWidth) => {\n    setLargeurBaguette(baguetteWidth)\n  }\n\n  const handleBaguetteHeigthChange = (baguetteHeight) => {\n    setHauteurBaguette(baguetteHeight)\n  }\n\n  const handleRabateHeightChange = (rabateHeight) => {\n    setHauteurFeuillure(rabateHeight)\n  }\n\n  const handleRabateWidthChange = (RabateWidth) => {\n    setLargeurFeuillure(RabateWidth)\n  }\n\n  const history = []\n\n  var img // Variable pour stocker l'image\n\n  const jsonDiv = useRef()\n\n  useEffect(() => {\n    if (editor) {\n      //editor.setFillColor('#FF0000')\n\n      editor.canvas.backgroundColor = BackColor\n      editor.canvas.setDimensions({ width: 500, height: (500 * hauteurArt) / largeurArt })\n      editor.setFillColor(FillColor)\n      editor.setStrokeColor(StrokeColor)\n\n      const formattedJson = JSON.stringify(editor.canvas, null, 2)\n      jsonDiv.current = formattedJson\n      setJsonContent(formattedJson)\n    }\n  })\n\n  useEffect(() => {\n    if (!editor || !fabric) {\n      return\n    }\n    //editor.canvas.freeDrawingBrush.color = color\n\n    editor.canvas.getActiveObject.strokeWidth = parseInt(Stroke)\n    editor.setStrokeColor(StrokeColor)\n    editor.setFillColor(FillColor)\n    editor.canvas.backgroundColor = BackColor\n  }, [StrokeColor, FillColor, Stroke, AnimationSpeed, BackColor])\n\n  useEffect(() => {\n    if (!editor || !fabric) {\n      return\n    }\n    editor.canvas.freeDrawingBrush.color = StrokeColor\n    editor.setStrokeColor(StrokeColor)\n  }, [StrokeColor])\n\n  const onToggleBaguette = () => {\n    SetBaguetteSeule(!baguetteSeule)\n  }\n\n  const onToggleDraw = () => {\n    editor.canvas.isDrawingMode = !editor.canvas.isDrawingMode\n  }\n  const onUndo = () => {\n    if (editor.canvas._objects.length > 0) {\n      history.push(editor.canvas._objects.pop())\n    }\n    editor.canvas.renderAll()\n  }\n  const onRedo = () => {\n    if (history.length > 0) {\n      editor.canvas.add(history.pop())\n    }\n  }\n\n  const clear = () => {\n    editor.canvas._objects.splice(0, editor.canvas._objects.length)\n    history.splice(0, history.length)\n    editor.canvas.renderAll()\n  }\n\n  const onToggleMug = () => {\n    setvisibleMug(!visibleMug)\n  }\n  const onToggleCadre = () => {\n    setvisibleCadre(!visibleCadre)\n  }\n\n  const onTogglePP = () => {\n    setvisiblePP(!visiblePP)\n  }\n\n  const onToggleDos = () => {\n    setvisibleDos(!visibleDos)\n  }\n\n  const onToggleArt = () => {\n    setvisibleArt(!visibleArt)\n  }\n\n  const onAddCircle = () => {\n    editor.canvas.isDrawingMode = false\n\n    editor.addCircle()\n  }\n\n  const onAddEllipse = () => {\n    editor.canvas.isDrawingMode = false\n\n    var ellipse = new fabric.Ellipse({\n      left: 10,\n      top: 10,\n      rx: 30,\n      ry: 20,\n      strokeWidth: parseInt(Stroke),\n      fill: FillColor,\n      stroke: StrokeColor,\n      strokeUniform: true,\n    })\n\n    // Adding it to the canvas\n    editor.canvas.add(ellipse)\n  }\n\n  const onDelete = () => {\n    editor.canvas.remove(editor.canvas.getActiveObject())\n  }\n\n  const onClear = () => {\n    editor.canvas._objects.splice(0, editor.canvas._objects.length)\n    history.splice(0, history.length)\n    onSelectAll()\n    editor.canvas.renderAll()\n  }\n\n  const onSelectAll = () => {\n    editor.canvas.discardActiveObject()\n    var sel = new fabric.ActiveSelection(editor.canvas.getObjects(), {\n      canvas: editor.canvas,\n    })\n    editor.canvas.setActiveObject(sel)\n    editor.canvas.requestRenderAll()\n  }\n\n  const onAddRectangle = () => {\n    editor.canvas.isDrawingMode = false\n    var rect = new fabric.Rect({\n      left: 10,\n      top: 10,\n      width: 100,\n      height: 50,\n      strokeWidth: parseInt(Stroke),\n      fill: FillColor,\n      stroke: StrokeColor,\n      strokeUniform: true,\n    })\n\n    // Adding it to the canvas\n    editor.canvas.add(rect)\n  }\n\n  const onAddText = () => {\n    editor.canvas.isDrawingMode = false\n    editor.addText('Votre texte...')\n  }\n\n  // Fonction pour rogner l'image\n  function onCrop() {\n    // Vérifiez si une image est présente\n    const rayon = editor.canvas.getActiveObject().height / 2\n\n    const clipPath = new fabric.Circle({\n      radius: rayon,\n\n      // The originY and originX helps to center the image and the clipPath\n      originY: 'center',\n      originX: 'center',\n    })\n\n    editor.canvas.getActiveObject().clipPath = clipPath\n    editor.canvas.renderAll()\n  }\n\n  const exportToSvg = () => {\n    // Obtenez le contenu du canvas au format SVG\n    const svgString = editor.canvas.toSVG()\n\n    // Créez un objet Blob contenant le SVG\n    const blob = new Blob([svgString], { type: 'image/svg+xml' })\n\n    // Créez un lien d'ancrage pour télécharger le fichier SVG\n    const link = document.createElement('a')\n    link.href = URL.createObjectURL(blob)\n    link.download = 'canvas-export.svg'\n\n    // Simulez un clic pour déclencher le téléchargement\n    link.click()\n\n    // Libérez les ressources\n    URL.revokeObjectURL(link.href)\n  }\n\n  const exportToPng = async () => {\n    // Demander à l'utilisateur d'entrer le nom du fichier\n\n    const dataURL = editor.canvas.toDataURL({\n      width: editor.canvas.width,\n      height: editor.canvas.height,\n      left: 0,\n      top: 0,\n      format: 'png',\n    })\n    const link = document.createElement('a')\n    link.download = 'image.png'\n    link.href = dataURL\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const handleImportSVG = (e) => {\n    const file = e.target.files[0]\n\n    if (file) {\n      const reader = new FileReader()\n\n      reader.onload = (event) => {\n        const svgString = event.target.result\n\n        fabric.loadSVGFromString(svgString, (objects, options) => {\n          const svgGroup = new fabric.Group(objects, options)\n\n          // Add the imported SVG to the canvas\n          editor.canvas.add(svgGroup)\n        })\n      }\n\n      reader.readAsText(file)\n    }\n  }\n\n  const unGroupObjects = () => {\n    if (!editor.canvas.getActiveObject()) {\n      return\n    }\n    if (editor.canvas.getActiveObject().type !== 'group') {\n      return\n    }\n    editor.canvas.getActiveObject().toActiveSelection()\n    editor.canvas.requestRenderAll()\n  }\n\n  const groupObjects = () => {\n    if (!editor.canvas.getActiveObject()) {\n      return\n    }\n    if (editor.canvas.getActiveObject().type !== 'activeSelection') {\n      return\n    }\n    editor.canvas.getActiveObject().toGroup()\n    editor.canvas.requestRenderAll()\n  }\n\n  const handleImageUpload = (e) => {\n    editor.canvas.isDrawingMode = false\n    const file = e.target.files[0]\n    if (file) {\n      const reader = new FileReader()\n      reader.onload = (event) => {\n        const imageUrl = event.target.result\n        fabric.Image.fromURL(imageUrl, (image) => {\n          console.log(image.width, image.height)\n          if (image.width > image.height) {\n            image.scaleToHeight(editor.canvas.height)\n          } else {\n            image.scaleToWidth(editor.canvas.width)\n          }\n          //image.lockScalingY = true\n          img = image\n\n          editor.canvas.add(image)\n\n          // Utilisez l'éditeur Fabric.js pour ajouter l'image au canvas\n        })\n      }\n\n      reader.readAsDataURL(file)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"espace\">\n          <Canvas frameloop=\"always\" shadows dpr={[1, 2]} camera={{ position: [0, 30, -5], fov: 85 }}>\n            <color attach=\"background\" args={['#EFCDAB']} />\n\n            <ambientLight intensity={0.2} />\n            <directionalLight intensity={0.4} />\n            {/*<spotLight intensity={0.1} angle={0.1} penumbra={0.5} position={[10, 15, -10]} castShadow />*/}\n            <Suspense fallback={null}>\n              {visibleCadre ? <CadreModel animation={Animation} reverse={Reverse} animationSpeed={AnimationSpeed} /> : null}\n\n              {visibleCadreBois ? <CadreBois animation={Animation} reverse={Reverse} animationSpeed={AnimationSpeed} /> : null}\n              {visibleMug ? <MugModel animation={Animation} reverse={Reverse} animationSpeed={AnimationSpeed} /> : null}\n\n              <Cadre\n                position={[0, -2.5, 0]}\n                frameColor={frameColor}\n                CadreExtWidth={largeurCadre}\n                CadreExtHeight={hauteurCadre}\n                BaguetteWidth={largeurBaguette}\n                BaguetteHeight={hauteurBaguette}\n                RabateHeight={hauteurFeuillure}\n                RabateWidth={largeurFeuillure}\n                BaguetteSeule={baguetteSeule}\n                visiblePP={visiblePP}\n                visibleDos={visibleDos}\n                visibleArt={visibleArt}\n                PPColor={PPColor}\n                DosColor={DosColor}\n              />\n            </Suspense>\n            <OrbitControls />\n          </Canvas>\n        </div>\n        <div className=\"test\">\n          <div className=\"cadre\">\n            <div className=\"cadre\">\n              <BaguetteLengthInput\n                label=\"Largeur Cadre (cm)\"\n                initialValue={largeurArt}\n                maxValue=\"200\"\n                minValue=\"5\"\n                onLengthChange={(value) => handleArtWidthChange(value)}\n              />\n              <BaguetteLengthInput\n                label=\"Hauteur Cadre(cm)\"\n                initialValue={hauteurArt}\n                maxValue=\"200\"\n                minValue=\"5\"\n                onLengthChange={(value) => handleArtHeightChange(value)}\n              />\n            </div>\n            <label disabled={false}>\n              Cadre\n              <input disabled={false} type=\"color\" value={frameColor} onChange={(e) => setFrameColor(e.target.value)} />\n            </label>\n            <label disabled={false}>\n              PassePartout\n              <input disabled={false} type=\"color\" value={PPColor} onChange={(e) => setPPColor(e.target.value)} />\n            </label>\n            <button onClick={onTogglePP}>Passe-partout</button>\n            <div className=\"cadre\">\n              <BaguetteLengthInput\n                label=\"Largeur Cadre (cm)\"\n                initialValue={largeurCadre}\n                maxValue=\"200\"\n                minValue={2 * largeurBaguette}\n                onLengthChange={(value) => handleFrameWidthChange(value)}\n              />\n              <BaguetteLengthInput\n                label=\"Hauteur Cadre(cm)\"\n                initialValue={hauteurCadre}\n                maxValue=\"200\"\n                minValue={2 * largeurBaguette}\n                onLengthChange={(value) => handleFrameHeightChange(value)}\n              />\n              <BaguetteLengthInput\n                label=\"Largeur Baguette(cm)\"\n                initialValue={largeurBaguette}\n                maxValue=\"10\"\n                minValue=\"1\"\n                onLengthChange={(value) => handleBaguetteWidthChange(value)}\n              />\n              <BaguetteLengthInput\n                label=\"Epaisseur Baguette\"\n                initialValue={hauteurBaguette}\n                maxValue=\"10\"\n                minValue=\"1\"\n                onLengthChange={(value) => handleBaguetteHeigthChange(value)}\n              />\n              <BaguetteLengthInput\n                label=\"Hauteur Feuillure\"\n                initialValue={hauteurFeuillure}\n                maxValue={hauteurBaguette}\n                minValue=\"0.1\"\n                onLengthChange={(value) => handleRabateHeightChange(value)}\n              />\n              <BaguetteLengthInput\n                label=\"Largeur Feuillure\"\n                initialValue={largeurFeuillure}\n                maxValue={largeurBaguette}\n                minValue=\"0.1\"\n                onLengthChange={(value) => handleRabateWidthChange(value)}\n              />\n            </div>\n            <div className=\"boutons-cadre\">\n              <button onClick={onToggleBaguette}> Baguette seule</button>\n            </div>\n          </div>\n          <div>\n            <button onClick={onAddCircle}>Circle</button>\n            <button onClick={onAddEllipse}>Ellipse</button>\n            <button onClick={onAddRectangle}>Rectangle</button>\n            <button onClick={onAddText}>Texte</button>\n            <button onClick={onToggleDraw}>Draw</button>\n          </div>\n          <input type=\"file\" id=\"imageUpload\" accept=\"image/*\" onChange={handleImageUpload} />\n          <input type=\"file\" accept=\".svg\" onChange={handleImportSVG} />\n          <button onClick={onCrop}>Crop</button>\n\n          <div className=\"canvas-container\">\n            <FabricJSCanvas id=\"cnvs\" className=\"sample-canvas\" onReady={onReady} onSelect={(e) => setSelectedObject(e.target)} />\n          </div>\n          <label disabled={false}>\n            Fill\n            <input disabled={false} type=\"color\" value={FillColor} onChange={(e) => setFillColor(e.target.value)} />\n          </label>\n          <label disabled={false}>\n            Stroke\n            <input disabled={false} type=\"color\" value={StrokeColor} onChange={(e) => setStrokeColor(e.target.value)} />\n          </label>\n          <label disabled={false}>\n            Back\n            <input disabled={false} type=\"color\" value={BackColor} onChange={(e) => setBackColor(e.target.value)} />\n          </label>\n          <div>\n            <button onClick={onDelete}>DELETE</button>\n            <button onClick={onClear}>CLEAR</button>\n            <button onClick={onSelectAll}>SELECT ALL</button>\n            <button onClick={onUndo}>UNDO</button>\n            <button onClick={onRedo}>REDO</button>\n          </div>\n          <div>\n            <button onClick={groupObjects}>Grouper</button>\n            <button onClick={unGroupObjects}>Dégrouper</button>\n          </div>\n          <div>\n            <input type=\"range\" id=\"stroke\" name=\"stroke\" value={Stroke} min=\"0\" max=\"30\" onChange={(e) => setStroke(e.target.value)} />\n            <label for=\"volume\">Stroke Width: {Stroke} px</label>\n          </div>\n\n          <div className=\"fabric-canvas\"></div>\n\n          <p>move circle around</p>\n          <button onClick={onToggleMug}>MUG</button>\n          <button onClick={onToggleCadre}>CADRE</button>\n          <div>\n            <label disabled={false}>\n              <input disabled={false} type=\"checkbox\" checked={Animation} value={Animation} onChange={() => setAnimation(!Animation)} />\n              Start/ Stop Animation\n              <input disabled={false} type=\"checkbox\" checked={Reverse} value={Reverse} onChange={() => setReverse(!Reverse)} />\n              Reverse\n              <input\n                type=\"range\"\n                id=\"speed\"\n                name=\"speed\"\n                value={AnimationSpeed}\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                onChange={(e) => setAnimationSpeed(e.target.valueAsNumber)}\n              />\n              Animation speed\n              <div>\n                <button onClick={exportToPng}>Save->PNG</button>\n                <button onClick={exportToSvg}>Save->SVG</button>\n              </div>\n              <div ref={jsonDiv} style={{ whiteSpace: 'pre-wrap' }}>\n                {' '}\n                {jsonContent}{' '}\n              </div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}